// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// DeleteDeviceHardwareIDReader is a Reader for the DeleteDeviceHardwareID structure.
type DeleteDeviceHardwareIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeviceHardwareIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDeviceHardwareIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteDeviceHardwareIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDeviceHardwareIDOK creates a DeleteDeviceHardwareIDOK with default headers values
func NewDeleteDeviceHardwareIDOK() *DeleteDeviceHardwareIDOK {
	return &DeleteDeviceHardwareIDOK{}
}

/*
DeleteDeviceHardwareIDOK describes a response with status code 200, with default header values.

Device Subscribed
*/
type DeleteDeviceHardwareIDOK struct {
}

// IsSuccess returns true when this delete device hardware Id o k response has a 2xx status code
func (o *DeleteDeviceHardwareIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete device hardware Id o k response has a 3xx status code
func (o *DeleteDeviceHardwareIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete device hardware Id o k response has a 4xx status code
func (o *DeleteDeviceHardwareIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete device hardware Id o k response has a 5xx status code
func (o *DeleteDeviceHardwareIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete device hardware Id o k response a status code equal to that given
func (o *DeleteDeviceHardwareIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete device hardware Id o k response
func (o *DeleteDeviceHardwareIDOK) Code() int {
	return 200
}

func (o *DeleteDeviceHardwareIDOK) Error() string {
	return fmt.Sprintf("[DELETE /device/{hardwareId}][%d] deleteDeviceHardwareIdOK ", 200)
}

func (o *DeleteDeviceHardwareIDOK) String() string {
	return fmt.Sprintf("[DELETE /device/{hardwareId}][%d] deleteDeviceHardwareIdOK ", 200)
}

func (o *DeleteDeviceHardwareIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceHardwareIDDefault creates a DeleteDeviceHardwareIDDefault with default headers values
func NewDeleteDeviceHardwareIDDefault(code int) *DeleteDeviceHardwareIDDefault {
	return &DeleteDeviceHardwareIDDefault{
		_statusCode: code,
	}
}

/*
DeleteDeviceHardwareIDDefault describes a response with status code -1, with default header values.

Error
*/
type DeleteDeviceHardwareIDDefault struct {
	_statusCode int

	Payload *models.Envelope
}

// IsSuccess returns true when this delete device hardware ID default response has a 2xx status code
func (o *DeleteDeviceHardwareIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete device hardware ID default response has a 3xx status code
func (o *DeleteDeviceHardwareIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete device hardware ID default response has a 4xx status code
func (o *DeleteDeviceHardwareIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete device hardware ID default response has a 5xx status code
func (o *DeleteDeviceHardwareIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete device hardware ID default response a status code equal to that given
func (o *DeleteDeviceHardwareIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete device hardware ID default response
func (o *DeleteDeviceHardwareIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDeviceHardwareIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /device/{hardwareId}][%d] DeleteDeviceHardwareID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDeviceHardwareIDDefault) String() string {
	return fmt.Sprintf("[DELETE /device/{hardwareId}][%d] DeleteDeviceHardwareID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDeviceHardwareIDDefault) GetPayload() *models.Envelope {
	return o.Payload
}

func (o *DeleteDeviceHardwareIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
