// Code generated by go-swagger; DO NOT EDIT.

package interactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostInteractionsInteractionFidAttachmentParams creates a new PostInteractionsInteractionFidAttachmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostInteractionsInteractionFidAttachmentParams() *PostInteractionsInteractionFidAttachmentParams {
	return &PostInteractionsInteractionFidAttachmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostInteractionsInteractionFidAttachmentParamsWithTimeout creates a new PostInteractionsInteractionFidAttachmentParams object
// with the ability to set a timeout on a request.
func NewPostInteractionsInteractionFidAttachmentParamsWithTimeout(timeout time.Duration) *PostInteractionsInteractionFidAttachmentParams {
	return &PostInteractionsInteractionFidAttachmentParams{
		timeout: timeout,
	}
}

// NewPostInteractionsInteractionFidAttachmentParamsWithContext creates a new PostInteractionsInteractionFidAttachmentParams object
// with the ability to set a context for a request.
func NewPostInteractionsInteractionFidAttachmentParamsWithContext(ctx context.Context) *PostInteractionsInteractionFidAttachmentParams {
	return &PostInteractionsInteractionFidAttachmentParams{
		Context: ctx,
	}
}

// NewPostInteractionsInteractionFidAttachmentParamsWithHTTPClient creates a new PostInteractionsInteractionFidAttachmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostInteractionsInteractionFidAttachmentParamsWithHTTPClient(client *http.Client) *PostInteractionsInteractionFidAttachmentParams {
	return &PostInteractionsInteractionFidAttachmentParams{
		HTTPClient: client,
	}
}

/*
PostInteractionsInteractionFidAttachmentParams contains all the parameters to send to the API endpoint

	for the post interactions interaction fid attachment operation.

	Typically these are written to a http.Request.
*/
type PostInteractionsInteractionFidAttachmentParams struct {

	// Filename.
	Filename *string

	// InteractionFid.
	InteractionFid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post interactions interaction fid attachment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostInteractionsInteractionFidAttachmentParams) WithDefaults() *PostInteractionsInteractionFidAttachmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post interactions interaction fid attachment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostInteractionsInteractionFidAttachmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) WithTimeout(timeout time.Duration) *PostInteractionsInteractionFidAttachmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) WithContext(ctx context.Context) *PostInteractionsInteractionFidAttachmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) WithHTTPClient(client *http.Client) *PostInteractionsInteractionFidAttachmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilename adds the filename to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) WithFilename(filename *string) *PostInteractionsInteractionFidAttachmentParams {
	o.SetFilename(filename)
	return o
}

// SetFilename adds the filename to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) SetFilename(filename *string) {
	o.Filename = filename
}

// WithInteractionFid adds the interactionFid to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) WithInteractionFid(interactionFid string) *PostInteractionsInteractionFidAttachmentParams {
	o.SetInteractionFid(interactionFid)
	return o
}

// SetInteractionFid adds the interactionFid to the post interactions interaction fid attachment params
func (o *PostInteractionsInteractionFidAttachmentParams) SetInteractionFid(interactionFid string) {
	o.InteractionFid = interactionFid
}

// WriteToRequest writes these params to a swagger request
func (o *PostInteractionsInteractionFidAttachmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Filename != nil {

		// query param filename
		var qrFilename string

		if o.Filename != nil {
			qrFilename = *o.Filename
		}
		qFilename := qrFilename
		if qFilename != "" {

			if err := r.SetQueryParam("filename", qFilename); err != nil {
				return err
			}
		}
	}

	// path param interactionFid
	if err := r.SetPathParam("interactionFid", o.InteractionFid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
