// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// PutOrdersOrderFidSetChargeIDReader is a Reader for the PutOrdersOrderFidSetChargeID structure.
type PutOrdersOrderFidSetChargeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrdersOrderFidSetChargeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOrdersOrderFidSetChargeIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutOrdersOrderFidSetChargeIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutOrdersOrderFidSetChargeIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutOrdersOrderFidSetChargeIDOK creates a PutOrdersOrderFidSetChargeIDOK with default headers values
func NewPutOrdersOrderFidSetChargeIDOK() *PutOrdersOrderFidSetChargeIDOK {
	return &PutOrdersOrderFidSetChargeIDOK{}
}

/*
PutOrdersOrderFidSetChargeIDOK describes a response with status code 200, with default header values.

Charge ID Accepted
*/
type PutOrdersOrderFidSetChargeIDOK struct {
	Payload *models.Envelope
}

// IsSuccess returns true when this put orders order fid set charge Id o k response has a 2xx status code
func (o *PutOrdersOrderFidSetChargeIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put orders order fid set charge Id o k response has a 3xx status code
func (o *PutOrdersOrderFidSetChargeIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orders order fid set charge Id o k response has a 4xx status code
func (o *PutOrdersOrderFidSetChargeIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put orders order fid set charge Id o k response has a 5xx status code
func (o *PutOrdersOrderFidSetChargeIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put orders order fid set charge Id o k response a status code equal to that given
func (o *PutOrdersOrderFidSetChargeIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put orders order fid set charge Id o k response
func (o *PutOrdersOrderFidSetChargeIDOK) Code() int {
	return 200
}

func (o *PutOrdersOrderFidSetChargeIDOK) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] putOrdersOrderFidSetChargeIdOK  %+v", 200, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDOK) String() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] putOrdersOrderFidSetChargeIdOK  %+v", 200, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDOK) GetPayload() *models.Envelope {
	return o.Payload
}

func (o *PutOrdersOrderFidSetChargeIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrdersOrderFidSetChargeIDBadRequest creates a PutOrdersOrderFidSetChargeIDBadRequest with default headers values
func NewPutOrdersOrderFidSetChargeIDBadRequest() *PutOrdersOrderFidSetChargeIDBadRequest {
	return &PutOrdersOrderFidSetChargeIDBadRequest{}
}

/*
PutOrdersOrderFidSetChargeIDBadRequest describes a response with status code 400, with default header values.

Invalid Charge ID
*/
type PutOrdersOrderFidSetChargeIDBadRequest struct {
	Payload *models.Envelope
}

// IsSuccess returns true when this put orders order fid set charge Id bad request response has a 2xx status code
func (o *PutOrdersOrderFidSetChargeIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put orders order fid set charge Id bad request response has a 3xx status code
func (o *PutOrdersOrderFidSetChargeIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put orders order fid set charge Id bad request response has a 4xx status code
func (o *PutOrdersOrderFidSetChargeIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put orders order fid set charge Id bad request response has a 5xx status code
func (o *PutOrdersOrderFidSetChargeIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put orders order fid set charge Id bad request response a status code equal to that given
func (o *PutOrdersOrderFidSetChargeIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put orders order fid set charge Id bad request response
func (o *PutOrdersOrderFidSetChargeIDBadRequest) Code() int {
	return 400
}

func (o *PutOrdersOrderFidSetChargeIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] putOrdersOrderFidSetChargeIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] putOrdersOrderFidSetChargeIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDBadRequest) GetPayload() *models.Envelope {
	return o.Payload
}

func (o *PutOrdersOrderFidSetChargeIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrdersOrderFidSetChargeIDDefault creates a PutOrdersOrderFidSetChargeIDDefault with default headers values
func NewPutOrdersOrderFidSetChargeIDDefault(code int) *PutOrdersOrderFidSetChargeIDDefault {
	return &PutOrdersOrderFidSetChargeIDDefault{
		_statusCode: code,
	}
}

/*
PutOrdersOrderFidSetChargeIDDefault describes a response with status code -1, with default header values.

Error
*/
type PutOrdersOrderFidSetChargeIDDefault struct {
	_statusCode int

	Payload *models.Envelope
}

// IsSuccess returns true when this put orders order fid set charge ID default response has a 2xx status code
func (o *PutOrdersOrderFidSetChargeIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put orders order fid set charge ID default response has a 3xx status code
func (o *PutOrdersOrderFidSetChargeIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put orders order fid set charge ID default response has a 4xx status code
func (o *PutOrdersOrderFidSetChargeIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put orders order fid set charge ID default response has a 5xx status code
func (o *PutOrdersOrderFidSetChargeIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put orders order fid set charge ID default response a status code equal to that given
func (o *PutOrdersOrderFidSetChargeIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put orders order fid set charge ID default response
func (o *PutOrdersOrderFidSetChargeIDDefault) Code() int {
	return o._statusCode
}

func (o *PutOrdersOrderFidSetChargeIDDefault) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] PutOrdersOrderFidSetChargeID default  %+v", o._statusCode, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDDefault) String() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/setChargeId][%d] PutOrdersOrderFidSetChargeID default  %+v", o._statusCode, o.Payload)
}

func (o *PutOrdersOrderFidSetChargeIDDefault) GetPayload() *models.Envelope {
	return o.Payload
}

func (o *PutOrdersOrderFidSetChargeIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
