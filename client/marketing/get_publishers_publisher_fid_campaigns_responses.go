// Code generated by go-swagger; DO NOT EDIT.

package marketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/fortifi/go-api/models"
)

// GetPublishersPublisherFidCampaignsReader is a Reader for the GetPublishersPublisherFidCampaigns structure.
type GetPublishersPublisherFidCampaignsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPublishersPublisherFidCampaignsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPublishersPublisherFidCampaignsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPublishersPublisherFidCampaignsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPublishersPublisherFidCampaignsOK creates a GetPublishersPublisherFidCampaignsOK with default headers values
func NewGetPublishersPublisherFidCampaignsOK() *GetPublishersPublisherFidCampaignsOK {
	return &GetPublishersPublisherFidCampaignsOK{}
}

/*
GetPublishersPublisherFidCampaignsOK describes a response with status code 200, with default header values.

List of campaigns
*/
type GetPublishersPublisherFidCampaignsOK struct {
	Payload *GetPublishersPublisherFidCampaignsOKBody
}

// IsSuccess returns true when this get publishers publisher fid campaigns o k response has a 2xx status code
func (o *GetPublishersPublisherFidCampaignsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get publishers publisher fid campaigns o k response has a 3xx status code
func (o *GetPublishersPublisherFidCampaignsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get publishers publisher fid campaigns o k response has a 4xx status code
func (o *GetPublishersPublisherFidCampaignsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get publishers publisher fid campaigns o k response has a 5xx status code
func (o *GetPublishersPublisherFidCampaignsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get publishers publisher fid campaigns o k response a status code equal to that given
func (o *GetPublishersPublisherFidCampaignsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get publishers publisher fid campaigns o k response
func (o *GetPublishersPublisherFidCampaignsOK) Code() int {
	return 200
}

func (o *GetPublishersPublisherFidCampaignsOK) Error() string {
	return fmt.Sprintf("[GET /publishers/{publisherFid}/campaigns][%d] getPublishersPublisherFidCampaignsOK  %+v", 200, o.Payload)
}

func (o *GetPublishersPublisherFidCampaignsOK) String() string {
	return fmt.Sprintf("[GET /publishers/{publisherFid}/campaigns][%d] getPublishersPublisherFidCampaignsOK  %+v", 200, o.Payload)
}

func (o *GetPublishersPublisherFidCampaignsOK) GetPayload() *GetPublishersPublisherFidCampaignsOKBody {
	return o.Payload
}

func (o *GetPublishersPublisherFidCampaignsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPublishersPublisherFidCampaignsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPublishersPublisherFidCampaignsDefault creates a GetPublishersPublisherFidCampaignsDefault with default headers values
func NewGetPublishersPublisherFidCampaignsDefault(code int) *GetPublishersPublisherFidCampaignsDefault {
	return &GetPublishersPublisherFidCampaignsDefault{
		_statusCode: code,
	}
}

/*
GetPublishersPublisherFidCampaignsDefault describes a response with status code -1, with default header values.

Error
*/
type GetPublishersPublisherFidCampaignsDefault struct {
	_statusCode int

	Payload *models.Envelope
}

// IsSuccess returns true when this get publishers publisher fid campaigns default response has a 2xx status code
func (o *GetPublishersPublisherFidCampaignsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get publishers publisher fid campaigns default response has a 3xx status code
func (o *GetPublishersPublisherFidCampaignsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get publishers publisher fid campaigns default response has a 4xx status code
func (o *GetPublishersPublisherFidCampaignsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get publishers publisher fid campaigns default response has a 5xx status code
func (o *GetPublishersPublisherFidCampaignsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get publishers publisher fid campaigns default response a status code equal to that given
func (o *GetPublishersPublisherFidCampaignsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get publishers publisher fid campaigns default response
func (o *GetPublishersPublisherFidCampaignsDefault) Code() int {
	return o._statusCode
}

func (o *GetPublishersPublisherFidCampaignsDefault) Error() string {
	return fmt.Sprintf("[GET /publishers/{publisherFid}/campaigns][%d] GetPublishersPublisherFidCampaigns default  %+v", o._statusCode, o.Payload)
}

func (o *GetPublishersPublisherFidCampaignsDefault) String() string {
	return fmt.Sprintf("[GET /publishers/{publisherFid}/campaigns][%d] GetPublishersPublisherFidCampaigns default  %+v", o._statusCode, o.Payload)
}

func (o *GetPublishersPublisherFidCampaignsDefault) GetPayload() *models.Envelope {
	return o.Payload
}

func (o *GetPublishersPublisherFidCampaignsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPublishersPublisherFidCampaignsOKBody get publishers publisher fid campaigns o k body
swagger:model GetPublishersPublisherFidCampaignsOKBody
*/
type GetPublishersPublisherFidCampaignsOKBody struct {
	models.Envelope

	// data
	Data *models.PublisherCampaigns `json:"data,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetPublishersPublisherFidCampaignsOKBody) UnmarshalJSON(raw []byte) error {
	// GetPublishersPublisherFidCampaignsOKBodyAO0
	var getPublishersPublisherFidCampaignsOKBodyAO0 models.Envelope
	if err := swag.ReadJSON(raw, &getPublishersPublisherFidCampaignsOKBodyAO0); err != nil {
		return err
	}
	o.Envelope = getPublishersPublisherFidCampaignsOKBodyAO0

	// GetPublishersPublisherFidCampaignsOKBodyAO1
	var dataGetPublishersPublisherFidCampaignsOKBodyAO1 struct {
		Data *models.PublisherCampaigns `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetPublishersPublisherFidCampaignsOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetPublishersPublisherFidCampaignsOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetPublishersPublisherFidCampaignsOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getPublishersPublisherFidCampaignsOKBodyAO0, err := swag.WriteJSON(o.Envelope)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getPublishersPublisherFidCampaignsOKBodyAO0)
	var dataGetPublishersPublisherFidCampaignsOKBodyAO1 struct {
		Data *models.PublisherCampaigns `json:"data,omitempty"`
	}

	dataGetPublishersPublisherFidCampaignsOKBodyAO1.Data = o.Data

	jsonDataGetPublishersPublisherFidCampaignsOKBodyAO1, errGetPublishersPublisherFidCampaignsOKBodyAO1 := swag.WriteJSON(dataGetPublishersPublisherFidCampaignsOKBodyAO1)
	if errGetPublishersPublisherFidCampaignsOKBodyAO1 != nil {
		return nil, errGetPublishersPublisherFidCampaignsOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetPublishersPublisherFidCampaignsOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get publishers publisher fid campaigns o k body
func (o *GetPublishersPublisherFidCampaignsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Envelope
	if err := o.Envelope.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishersPublisherFidCampaignsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishersPublisherFidCampaignsOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPublishersPublisherFidCampaignsOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get publishers publisher fid campaigns o k body based on the context it is used
func (o *GetPublishersPublisherFidCampaignsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Envelope
	if err := o.Envelope.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPublishersPublisherFidCampaignsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if swag.IsZero(o.Data) { // not required
			return nil
		}

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPublishersPublisherFidCampaignsOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPublishersPublisherFidCampaignsOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPublishersPublisherFidCampaignsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPublishersPublisherFidCampaignsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPublishersPublisherFidCampaignsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
