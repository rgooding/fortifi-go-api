// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateOrderItemPayload update order item payload
//
// swagger:model UpdateOrderItemPayload
type UpdateOrderItemPayload struct {

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// identity
	Identity string `json:"identity,omitempty"`

	// parent fid
	ParentFid string `json:"parentFid,omitempty"`

	// set properties
	SetProperties *PropertyBulkSetPayload `json:"setProperties,omitempty"`
}

// Validate validates this update order item payload
func (m *UpdateOrderItemPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSetProperties(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateOrderItemPayload) validateSetProperties(formats strfmt.Registry) error {
	if swag.IsZero(m.SetProperties) { // not required
		return nil
	}

	if m.SetProperties != nil {
		if err := m.SetProperties.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("setProperties")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("setProperties")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update order item payload based on the context it is used
func (m *UpdateOrderItemPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSetProperties(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateOrderItemPayload) contextValidateSetProperties(ctx context.Context, formats strfmt.Registry) error {

	if m.SetProperties != nil {

		if swag.IsZero(m.SetProperties) { // not required
			return nil
		}

		if err := m.SetProperties.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("setProperties")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("setProperties")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateOrderItemPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateOrderItemPayload) UnmarshalBinary(b []byte) error {
	var res UpdateOrderItemPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
